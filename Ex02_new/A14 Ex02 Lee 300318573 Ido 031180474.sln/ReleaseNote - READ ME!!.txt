/*
 changes in 6.2.1.8:
 * Fixed PicturesColleciton::GetPictureUrl method to include access_token in the request.
 *    Now properties like album.Photos[0].ImageNormal should work..
 *    
 * Added Event::InviteUsers(IEnumerable<User> i_UsersToInvite)
 * 
 * Fixed User::CreateEvent method (i_PrivaceType paramter did not work)
 * 
 * User::Locatiom and USer::Hometown properties are now fully loaded (a fully loaded City object)
 * 
 * Added a FacebookObject::ReFetch() method. USe it to re-fetch the data of an object from facebook, if needed
 * 
 * Added a FacebookService::Logout() method (can be used only after the application has a valid access_token
*/

/*
 changes in 6.2.1.7:
 * Fixed the Post::LikedBy property (did'nt work) and removed the Post::LikesCount property (didn't work)
 * (both bugs were due to recent changes in FB API..)
*/

/*
 changes in 6.2.1.6:
 * Made Location.Longitute and Location.Latitude a double? (nullable) instead of double, to support locations with no lat/long data.
*/

/*
 changes in 6.2.1.5:
 * Added a GeoPostedItem base class (derived from PosteItem) for posts that have a 'Place' property (Post,Status,Checkin,Photo)
*/

/*
 changes in 6.2.1.4:
 * Fixed the bug in User::CreateEvent method. time formmating did not include offset from UTC. not it does :)
 * 
*/

/*
 changes in 6.2.1.3:
 * Fixed the bug in User::createOrPost method when posting a post with a returned data in the format of PostingUserID_PostID
 * Fixed a small bug in Post::LikesCount (checking if m_DynamicData.likes.count != null)
 * 
*/

/*
 changes in 6.2.1.2:
* Added support for privacy settings when posting status/link/photo.
*  <param name="i_PrivacyParameterValue">a string representing the privacy parameter value.
*   Must be in the "{'value': 'CUSTOM|EVERYONE|SELF|ALL_FRIENDS|FRIEND_OF_FRIENDS', 'allow': '{friend-list-id1},{friend-list-id2},{friend-id1},{friend-id2}', 'deny': 'friend-list-id1,friend-list-id2,friend-id1,friend-id2'}
*   NOTE: allow/deny lists are only allowed when 'value' is set top 'CUSTOM'
*   see detalis here: https://developers.facebook.com/docs/reference/api/privacy-parameter 
*  </param>
*/

/*
 changes in 6.2.1.1:
* using Facebook-Net40 v "6.2.1-beta
* 
* Added FacebookService.GetCollectionByFQL<T>(string i_FqlPredicate, string i_Fields)
*     i.e:
*     var friends = FacebookService.GetCollectionByFQL<FacebookWrapper.ObjectModel.User>(
*                            "uid IN (SELECT uid1 FROM friend WHERE uid2 = me())", "name, online_presence");
*                            
*     var albums = FacebookService.GetCollectionByFQL<FacebookWrapper.ObjectModel.Album>(
*                            "strpos(name,'Thailand')>=0 AND owner IN (SELECT uid1 FROM friend WHERE uid2 = me())",
*                            "aid, owner, name, description");
*                            
* Added  FacebookService.GetObjectByFQL<T>((string i_FqlPredicate, string i_Fields)
*      var friend = FacebookService.GetObjectByFQL<FacebookWrapper.ObjectModel.User>(
*                            "username = 'tomerroznek'", "uid, name, first_name, last_name, online_presence");
*                            
* Added a Venue property to Event
* 
* Added an OnlineStatus property to User (fetched only via FQL: "uid, name, online_presence, ...")
*
* fixed the start_time / end_time bug:
*   After the 'Events Timezone' migration, all event times are ISO-8601 formatted strings;
*   they can no longer be specified as timestamps. The following formats are accepted:
*   Date-only (e.g., '2012-07-04'): events that have a date but no specific time yet.
*   Precise-time (e.g., '2012-07-04T19:00:00-0700'): events that start at a particular point in time,
*   in a specific offset from UTC.
*   This is the way new Facebook events keep track of time, and allows users to view events in different timezones.
*   
* Added User::Checkin(Checkin i_Checkin) that allows the app to perform a checkin on behalf of the user
*/

/*
 changes in 1.10:
 * added FULL support for groups (m_LoggedInUser.Groups)
 * fixed User.Link bug (changed get{return m_DynamicData.Link;} to get{return m_DynamicData.link;} )
 * renamed http:// to https:// in documentation headers
 * fixed all XML documentation headers
*/

/*
 changes in 1.9:
 * fixed the bug in User::CreateEvent method which didn't set the description of the event properly. { "description", i_Description}
 * fixed the documentation of User::CreateAlbum method (permission)
*/

/*
 changes in 1.8:
 * Added FULL support for friend lists (create, add friend, remove friend, delete list)
 * Added setters to User.Bio, Event.Description for binding demo
 * PhotoTag.XCoord and PhotoTag.XCoord are now doubles (instead of float)
*/

/*
 changes in 1.7:
 * Added FULL support for pages (this includes user.Languages, and the support for FULL Music/Books/Movies/Games/Television page objects)
 * FacebookService.s_CollectionLimit
 * FacebookService.s_UseForamttedToStrings
*/

/*
 changes in 1.6:
 * Added support for the "Arts and Entertainment" section in the user's info tab (user's favorites music/books/movies/games/television)
 * use FacebookService.GetCollection method(s) and pass the relevant connection string ("music"/"books"/"movies"/"games"/"television")
 * to get a FacebookObjectCollection<PageBase> in return, containing the basic information (Id, Name, Category, CreatedTime)
*/

/*
 changes in 1.5:
 * GetCollecitonAsync now accepts a more conmpact delegate declaration
*/


/*
 changes in 1.4:
 * The Pictures collection of User, Event, Photo, User is now implemented
 * (accepting a string indexer of SizeType)
 * The User.ImageSmall, User.ImageLarge, User.ImageNormal, User.ImageSmall, User.ImageSquare properties are now implemented
 * (each returning a System.Drawing.Image object)
 * GetObjectAsync, GetCollecitonAsync
 * Overall performance improvements
*/

/*
 changes in 1.3:
 * Fixed CreateEvent method (didn't work)
 * Implemented the Event.Respond method
*/

/*
 changes in 1.2:
 * Added User.Location and User.Hometown properties
 * Fixed XCoord/YCoord casting (double to float) exception
*/

/*
changes in 1.1:
 * A new FacebookService.Connect method for offline_access support
 * A new FacebookService.GetObject<T>(string i_ID, string i_Fields = "")
 * A new FacebookService.GetCollection<T>(string i_Connection, string i_ParentID = "me", string i_Fields = "", int i_Limit = 25, DynamicWrapper.eLoadOptions i_LoadOptions = DynamicWrapper.eLoadOptions.Full)
 *  for example: FacebookObjectCollection<Post> statuses = FacebookService.GetCollection<Photo>(i_Connection: "statuses", i_ParentID: "me", i_Limit: 100)
 *  returns the recent 100 status posts
 * Some new porperties in Album object:
 *  Album.CoverPhoto
 *  Album.CoverPhotoLargeURL
 *  Album.CoverPhotoThumbURL
 * Checkin.ToString()'s new format:
 *  "Checked in at {0} (on {1} by {2})", this.Place.Name, this.CreatedTime, this.From.Name);
*/
